name: Deployment
on:
  workflow_call:
    inputs:
      DEPLOY_TYPE:
        required: false
        type: string
        default: Development
        description: Development or Production
      DEPLOY_DOMAIN:
        required: true
        type: string
        description: The domain to deploy to
      NPM_CLIENT:
        required: false
        type: string
        default: npm
        description: npm or yarn

env:
  FORCE_COLOR: true
  NODE_VERSION: 16
jobs:
  deploy:
    name: ${{ inputs.DEPLOY_TYPE }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4
      - name: Use Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Restore yarn cache
        if: inputs.NPM_CLIENT == 'yarn'
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            */*/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      - name: Restore npm cache
        if: inputs.NPM_CLIENT == 'npm'
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-
      - name: Set install command
        id: install
        run: |
          if [[ "${{ inputs.NPM_CLIENT }}" == "npm" ]]; then
            echo "::set-output name=CMD::npm ci"
          else
            echo "::set-output name=CMD::yarn install --immutable"
          fi
      - name: Install dependencies
        run: ${{ steps.install.outputs.CMD }}
      - name: Set build command
        id: build
        run: |
          if [[ "${{ inputs.NPM_CLIENT }}" == "npm" ]]; then
            echo "::set-output name=CMD::npm run build"
          else
            echo "::set-output name=CMD::yarn build"
          fi
      - name: Build service
        run: ${{ steps.build.outputs.CMD }}